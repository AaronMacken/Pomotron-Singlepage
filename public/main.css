@import url("https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700&display=swap");
@import url("https://fonts.googleapis.com/css?family=Orbitron:400,500,700,900&display=swap");
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* give everything inherit for box sizing, and set the body to border-box */
  /* this makes it easier to change box-sizing properties for other things
  if the situation ever arises */
  -webkit-box-sizing: inherit;
  box-sizing: inherit; }

html {
  font-size: 62.5%;
  /* Setting the base font size to 62.5%
    this is 62.5% of the browsers default font size - 16px
    thus making our base font size 10px and making it easy to use rem for all children measurements
    This is a good practice to do incase users change the default font size. Very flexible */ }

body {
  /* Set all fonts in the body */
  font-family: "Roboto", serif, "Open Sans", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  padding: 3rem;
  color: #fff;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  background-color: #e9ebee; }

.header {
  height: 15rem;
  position: relative;
  background-image: -webkit-gradient(linear, left top, right bottom, color-stop(80%, #00796b), to(#004d40));
  background-image: linear-gradient(to right bottom, #00796b 80%, #004d40);
  -webkit-box-shadow: 0 18px 20px -12px #00796b;
  box-shadow: 0 18px 20px -12px #00796b;
  border: 2px solid #004d40;
  display: grid;
  grid-template-columns: 1fr 1fr;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center; }

.header__titleBox {
  width: 70%;
  margin: 0 10%; }

.header__titleBox__title {
  text-transform: uppercase;
  display: block;
  font-size: 3rem;
  font-weight: 100;
  font-style: italic;
  letter-spacing: 0.5rem;
  border-bottom: 2px solid #fff;
  width: 52rem; }

.header__titleBox__title--bold {
  font-weight: 500;
  font-style: italic; }

.header__titleBox__title--sub {
  margin-top: -1rem;
  font-weight: 300;
  font-size: 2rem;
  min-width: 53rem; }

.header__howToBox {
  font-size: 2rem;
  width: 60rem;
  margin: 0 auto; }

.header__howToBox--list {
  font-weight: 100;
  margin-left: 4rem; }

.fa-info-circle {
  float: right;
  cursor: pointer;
  position: absolute;
  right: 1%;
  top: 10%;
  font-size: 2.5rem; }

.timer {
  margin-top: 3rem;
  text-align: center;
  font-family: "Orbitron", serif;
  font-size: 2.5rem;
  letter-spacing: 1rem;
  color: #004d40; }
  .timer h1 {
    text-shadow: 0px 4px 3px rgba(0, 77, 64, 0.4), 0px 8px 13px rgba(0, 77, 64, 0.1), 0px 18px 23px rgba(0, 77, 64, 0.1); }

.timer__container {
  background-color: #f5f6f7;
  width: 50%;
  font-size: 2rem;
  padding: 1rem;
  margin: auto;
  border: 1px solid #dddfe2;
  border-radius: 2px;
  margin-bottom: 2rem;
  -webkit-box-shadow: 0 18px 20px -12px #dddfe2;
  box-shadow: 0 18px 20px -12px #dddfe2;
  min-width: 65rem; }

/* The container */
.container {
  display: inline-block;
  position: relative;
  padding-left: 3.5rem;
  margin-bottom: 1.2rem;
  cursor: pointer;
  font-size: 2rem;
  font-family: "Roboto", serif;
  color: #000;
  letter-spacing: 0;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

/* Hide the browser's default radio button */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer; }

/* Create a custom radio button */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 2.5rem;
  width: 2.5rem;
  background-color: #fff;
  border-radius: 50%; }

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: #00796b; }

/* When the radio button is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: #004d40; }

.container input:disabled ~ .checkmark {
  background-color: #fff; }

/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none; }

/* Show the indicator (dot/circle) when checked */
.container input:checked ~ .checkmark:after {
  display: block; }

/* Style the indicator (dot/circle) */
.container .checkmark:after {
  top: 9px;
  left: 9px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: white; }

.start {
  color: #004d40; }

.pause {
  color: #e74c3c; }

.reset {
  color: #f39c12; }

.main {
  color: #000000;
  margin-bottom: 2rem; }

/* Style the tab */
.tab {
  overflow: hidden;
  border: 1px solid #dddfe2;
  background-color: #f5f6f7;
  border-radius: 2px;
  width: 50%;
  margin: auto;
  min-width: 65rem; }

/* Style the buttons that are used to open the tab content */
.tab button {
  background-color: inherit;
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 14px 16px;
  -webkit-transition: 0.3s;
  transition: 0.3s;
  font-size: 1.5rem; }

/* Change background color of buttons on hover */
.tab button:hover {
  background-color: #dddfe2;
  font-weight: 500; }

/* Create an active/current tablink class */
.tab button.active {
  background-color: #dddfe2;
  font-weight: 500; }

/* Style the tab content */
.tabcontent {
  display: none;
  padding: 0.6rem 1.2rem;
  border: 2px solid #dddfe2;
  border-top: none;
  width: 50%;
  height: 50rem;
  margin: auto;
  overflow: scroll;
  background-color: #f5f6f7;
  min-width: 65rem; }

.taskInput {
  height: 6rem;
  background: none;
  border: none;
  border-bottom: 1px solid #34495e;
  outline: none;
  font: 300 1.9rem "Roboto", serif, sans-serif;
  padding: 2rem;
  color: #000;
  width: 50%;
  display: inline-block;
  float: left;
  margin-bottom: 1rem;
  text-align: center; }

::-webkit-input-placeholder {
  color: #000;
  opacity: 0.5; }

:-ms-input-placeholder {
  color: #000;
  opacity: 0.5; }

::-ms-input-placeholder {
  color: #000;
  opacity: 0.5; }

::placeholder {
  color: #000;
  opacity: 0.5; }

.hint {
  text-align: center;
  font-size: 1.9rem; }
  .hint span {
    font-style: italic; }

.completedTitle {
  width: 100%;
  height: 6rem;
  border-bottom: 1px solid #34495e;
  font: 300 1.9rem "Roboto", serif, sans-serif;
  padding: 2rem;
  color: #000;
  display: inline-block;
  margin-bottom: 1rem; }
  .completedTitle p {
    text-align: center;
    opacity: 0.5; }

.currentList,
.completedList {
  list-style: none;
  font-size: 2.5rem;
  color: #000;
  margin-top: 3rem; }

.task {
  margin-bottom: 2rem;
  opacity: 0.5; }
  .task:hover {
    opacity: 0.7;
    cursor: pointer; }
  .task button {
    margin-top: 1rem; }

.completedList .complete {
  display: none; }

.nestedList {
  list-style: none; }
  .nestedList li {
    display: inline-block;
    font-size: 2rem; }
  .nestedList p {
    display: inline-block; }

.btn {
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
  margin-right: 1rem;
  border: none;
  font-size: 2.2rem;
  outline: none;
  background: transparent;
  cursor: pointer; }

.btn--ajax {
  float: right;
  font-size: 2.5rem; }

.complete {
  color: #00796b; }

.delete {
  color: #e74c3c; }

.inProgress {
  opacity: 1 !important; }

.nestedP {
  font-size: 3rem;
  color: #00796b; }

.done {
  text-decoration: line-through;
  color: #bdc3c7; }

.disableControl {
  cursor: default;
  opacity: 0.4; }

.what {
  color: green; }

/* The Modal (background) */
.modal {
  display: none;
  /* Hidden by default */
  position: fixed;
  /* Stay in place */
  z-index: 1;
  /* Sit on top */
  left: 0;
  top: 0;
  width: 100%;
  /* Full width */
  height: 100%;
  /* Full height */
  overflow: auto;
  /* Enable scroll if needed */
  background-color: black;
  /* Fallback color */
  background-color: rgba(0, 0, 0, 0.4);
  /* Black w/ opacity */ }

/* Modal Content/Box */
.modal-content {
  margin: 15% auto;
  /* 15% from the top and centered */
  padding: 2rem;
  border: 1px solid #dddfe2;
  background-color: #f5f6f7;
  color: #000;
  font-size: 1.5rem;
  width: 50%;
  /* Could be more or less, depending on screen size */ }
  .modal-content h2 {
    text-align: center;
    color: #00796b; }
    .modal-content h2 span {
      font-style: italic;
      font-weight: 700; }
  .modal-content .bold {
    font-weight: bold; }
  .modal-content ul {
    margin: 2rem;
    margin-bottom: 1rem; }

/* The Close Button */
.close {
  color: #aaa;
  float: right;
  font-size: 2.8rem;
  font-weight: bold; }

.close:hover,
.close:focus {
  color: #e74c3c;
  text-decoration: none;
  cursor: pointer; }

@media only screen and (max-width: 1300px) {
  .header {
    display: block; }
  .header__titleBox {
    position: absolute;
    top: 50%;
    left: 50%;
    margin-right: -50%;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    width: initial;
    margin: initial; }
  .header__titleBox__title {
    display: inline-block; }
  .header__titleBox__title--sub {
    display: inline-block;
    margin: 0; }
  .header__howToBox--list {
    display: none; }
  .modal-content {
    width: 75%; } }

@media only screen and (max-width: 725px) {
  .header,
  .timer__container,
  .tab,
  .tabcontent {
    width: 90vw;
    min-width: 30rem; }
  .modal-content {
    width: 90%; } }

@media only screen and (max-width: 650px) {
  html {
    font-size: 50%; }
  .header__titleBox__title, .header__titleBox__title--sub {
    width: initial;
    min-width: initial;
    min-width: 30rem; } }

@media only screen and (max-width: 500px) {
  html {
    font-size: 45%; }
  .header {
    margin: 2rem auto; }
  body {
    min-width: 300px;
    padding: 0; }
  .taskInput {
    width: 100%; } }
